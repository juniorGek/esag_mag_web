import { useState } from "react";
import { User, Mail, Lock, Edit2, Save, X, ToggleLeft, ToggleRight } from "lucide-react";

const SettingsPage = () => {
  // État initial des données de l'administrateur
  const [adminData, setAdminData] = useState({
    name: "John",
    lastName: "Doe",
    email: "john@example.com",
    password: "********", // Masqué pour la sécurité
    profil: "Administrateur",
    enabled: true,
  });

  // État pour le mode édition et les données du formulaire
  const [isEditing, setIsEditing] = useState(false);
  const [formData, setFormData] = useState({ ...adminData });

  // Gestion des changements dans les champs du formulaire
  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  // Gestion du statut activé/désactivé
  const handleToggleEnabled = () => {
    setFormData({ ...formData, enabled: !formData.enabled });
  };

  // Sauvegarde des modifications
  const handleSave = () => {
    setAdminData({ ...formData });
    setIsEditing(false);
  };

  // Annulation des modifications
  const handleCancel = () => {
    setFormData({ ...adminData });
    setIsEditing(false);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-50 p-8">
      <div className="max-w-4xl mx-auto bg-white rounded-2xl shadow-2xl overflow-hidden">
        {/* En-tête de la page */}
        <div className="bg-gradient-to-r from-blue-600 to-purple-600 p-8">
          <h1 className="text-3xl font-bold text-white flex items-center gap-3">
            <User className="h-8 w-8" /> {adminData.name} {adminData.lastName}
          </h1>
          <p className="text-white/90 mt-2">Profil : {adminData.profil}</p>
        </div>

        {/* Contenu principal */}
        <div className="p-8">
          {/* Affichage des informations */}
          <div className="space-y-6">
            <div className="flex items-center gap-4 text-gray-700">
              <Mail className="h-6 w-6 text-blue-600" />
              <p>{adminData.email}</p>
            </div>
            <div className="flex items-center gap-4 text-gray-700">
              <Lock className="h-6 w-6 text-red-600" />
              <p>Mot de passe : {adminData.password}</p>
            </div>
            <div className="flex items-center gap-4 text-gray-700">
              {adminData.enabled ? (
                <ToggleRight className="h-6 w-6 text-green-600" />
              ) : (
                <ToggleLeft className="h-6 w-6 text-red-600" />
              )}
              <p>Statut : {adminData.enabled ? "Activé" : "Désactivé"}</p>
            </div>
          </div>

          {/* Formulaire de modification */}
          {isEditing ? (
            <div className="mt-8 space-y-6">
              <h2 className="text-2xl font-semibold text-gray-800">Modifier les informations</h2>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">Nom</label>
                  <input
                    type="text"
                    name="name"
                    value={formData.name}
                    onChange={handleInputChange}
                    className="w-full p-3 border border-gray-200 rounded-lg focus:border-blue-500 focus:ring-2 focus:ring-blue-200 outline-none transition"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">Prénom</label>
                  <input
                    type="text"
                    name="lastName"
                    value={formData.lastName}
                    onChange={handleInputChange}
                    className="w-full p-3 border border-gray-200 rounded-lg focus:border-blue-500 focus:ring-2 focus:ring-blue-200 outline-none transition"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">Email</label>
                  <input
                    type="email"
                    name="email"
                    value={formData.email}
                    onChange={handleInputChange}
                    className="w-full p-3 border border-gray-200 rounded-lg focus:border-blue-500 focus:ring-2 focus:ring-blue-200 outline-none transition"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">Mot de passe</label>
                  <input
                    type="password"
                    name="password"
                    value={formData.password}
                    onChange={handleInputChange}
                    className="w-full p-3 border border-gray-200 rounded-lg focus:border-blue-500 focus:ring-2 focus:ring-blue-200 outline-none transition"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">Profil</label>
                  <input
                    type="text"
                    name="profil"
                    value={formData.profil}
                    onChange={handleInputChange}
                    className="w-full p-3 border border-gray-200 rounded-lg focus:border-blue-500 focus:ring-2 focus:ring-blue-200 outline-none transition"
                  />
                </div>
                <div className="flex items-center gap-4">
                  <label className="text-sm font-medium text-gray-700">Statut activé</label>
                  <button
                    onClick={handleToggleEnabled}
                    className={`p-2 rounded-full transition-all ${
                      formData.enabled ? "bg-green-600" : "bg-red-600"
                    } text-white hover:scale-105`}
                  >
                    {formData.enabled ? (
                      <ToggleRight className="h-5 w-5" />
                    ) : (
                      <ToggleLeft className="h-5 w-5" />
                    )}
                  </button>
                </div>
              </div>
              <div className="flex gap-4">
                <button
                  onClick={handleSave}
                  className="flex items-center gap-2 bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition"
                >
                  <Save className="h-5 w-5" /> Sauvegarder
                </button>
                <button
                  onClick={handleCancel}
                  className="flex items-center gap-2 bg-gray-200 text-gray-700 px-6 py-3 rounded-lg hover:bg-gray-300 transition"
                >
                  <X className="h-5 w-5" /> Annuler
                </button>
              </div>
            </div>
          ) : (
            <button
              onClick={() => setIsEditing(true)}
              className="mt-6 flex items-center gap-2 bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition"
            >
              <Edit2 className="h-5 w-5" /> Modifier les informations
            </button>
          )}
        </div>
      </div>
    </div>
  );
};

export default SettingsPage;